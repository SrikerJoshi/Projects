{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/srikerjoshi/google-ai-chatbot?scriptVersionId=195491939\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-09-05T19:36:39.701869Z","iopub.execute_input":"2024-09-05T19:36:39.702744Z","iopub.status.idle":"2024-09-05T19:36:40.048909Z","shell.execute_reply.started":"2024-09-05T19:36:39.702706Z","shell.execute_reply":"2024-09-05T19:36:40.047844Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"/kaggle/input/personal-info-txt/personal_info.txt\n","output_type":"stream"}]},{"cell_type":"code","source":"import os\nimport google.generativeai as ai\nfrom IPython.display import clear_output\n\nApi_key= \"AIzaSyAvtNbQq7RRrbBXjvXPSj-NxLBVM39Aftc\"\n\ndef load_personal_info(filename):\n    with open(filename, 'r') as file:\n        personal_info = file.read()\n    return personal_info\n\npersonal_info = load_personal_info(\"/kaggle/input/personal-info-txt/personal_info.txt\")\n\nai.configure(api_key = Api_key)\n\nmodel = ai.GenerativeModel(\"gemini-1.0-pro-latest\")\nchat = model.start_chat()\n\n'''if you want clear terminal in VS code use the below function\ndef clear_terminal():\n    os.system('cls' if os.name == 'nt' else 'clear')'''\n\nprint(\"\\nHello! I am here to help you with providing information about Sriker Joshi.\\n\\nFeel free to ask me anything related to Sriker Joshi's background, interests, education, and more!\")\nprint(\"\\nFeel free to use the words 'clear' or 'reset' to clear your terminal and use 'bye' or 'exit' or quit' to exit from the terminal\\n\")\nfallback_response = \"I am sorry, but Sriker's database doesn't contain this information. Please feel free to ask other things about Sriker.\"\n\n''' if you would like to check explicitly if the request is related to sriker or not use the below function\ndef is_related_to_sriker(response_text):\n    \"\"\"Check if the response is related to Sriker Joshi.\"\"\"\n    keywords = [\"Sriker Joshi\", \"Sriker\", \"Joshi\", \"his background\", \"his interests\", \"his education\",\"his job\",\"his projects\",\"his hobbies\",\"his work\",\"data\",\"test\"],\n    return any(keyword.lower() in response_text.lower() for keyword in keywords)'''\n\nwhile True:\n    message = input(\"You: \")\n\n    if message.lower() in ['bye','exit','quit']:\n        print(\"Exiting the chatbot. The context has been reset.\")\n        chat = model.start_chat()  # Reset the chat contex\n        break\n\n    context_message = f\"Here is some information about Sriker Joshi:{personal_info}\\nUser's question: {message}\\n\\nAnswer\"\n    response = chat.send_message(context_message)\n\n    if message.lower() in ['clear', 'reset']:\n        #clear_terminal() if you are running this code in terminal on VS code,\n        clear_output()\n        print(\"Chatbot: Chat has been cleared. Feel free to ask your questions again.\")\n        continue\n\n    try:\n        response_text = response.text.strip()\n    except AttributeError as e:\n        print(f\"AttributeError: {e}\")\n        response_text = fallback_response\n    \n\n    if \"The provided\" in response_text:\n\n        print(\"Chatbot:\\n\", fallback_response)\n\n    else:\n\n        print(\"Chatbot:\\n\", response_text)\n        ","metadata":{"execution":{"iopub.status.busy":"2024-09-05T19:38:24.617631Z","iopub.execute_input":"2024-09-05T19:38:24.618498Z","iopub.status.idle":"2024-09-05T19:45:26.004564Z","shell.execute_reply.started":"2024-09-05T19:38:24.618459Z","shell.execute_reply":"2024-09-05T19:45:26.003566Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"Chatbot: Chat has been cleared. Feel free to ask your questions again.\n","output_type":"stream"},{"output_type":"stream","name":"stdin","text":"You:  tell me where did sriker go for his masters?\n"},{"name":"stdout","text":"Chatbot:\n Sriker Joshi completed his Master's in Data Science at the University of Alabama at Birmingham, Birmingham, Alabama. He was enrolled in the program from August 2022 to May 2024 and maintained a GPA of 3.7/4.0.\n","output_type":"stream"},{"output_type":"stream","name":"stdin","text":"You:  exit\n"},{"name":"stdout","text":"Exiting the chatbot. The context has been reset.\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}